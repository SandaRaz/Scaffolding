#package# $package$#enclosure#

[[#import# $import$#enclosure#]]

[ApiController]
[Route("[controller]")]
public class $class$Controller : ControllerBase
{
    private readonly $class$ _$classVariable$;
	private readonly ILogger<$class$Controller> _logger;

	public $class$Controller(ILogger<$class$Controller> logger)
	{
	    _logger = logger;
        _$classVariable$ = new $class$();
	}

    // GET: /$class$
	[HttpGet]
	public List<$class$> Get()
	{
	    NpgsqlConnection cnx = Connex.getConnection();
	    cnx.Open();
	    List<$class$> $classVariable$List = _$classVariable$.FindAll(cnx);
	    cnx.Close();

	    return $classVariable$List;
	}

	[HttpGet("pagination")]
    public List<$class$> GetPg(int debut)
    {
        NpgsqlConnection cnx = Connex.getConnection();
        cnx.Open();
        List<$class$> $classVariable$List = _$classVariable$.FindAllPg(cnx, debut);
        cnx.Close();

        return $classVariable$List;
    }

    // GET: /$class$/id
	[HttpGet("{id}")]
    public $class$? Get(string id)
    {
        NpgsqlConnection cnx = Connex.getConnection();
        cnx.Open();
        $class$? $classVariable$ = _$classVariable$.FindById(cnx, id);
        cnx.Close();

        return $classVariable$;
    }

    // POST: /$class$
    [HttpPost]
    public IActionResult Post([FromBody] $class$ $classVariable$){
        try
        {
            NpgsqlConnection cnx = Connex.getConnection();
            cnx.Open();
            $classVariable$.Save(cnx);
            cnx.Close();

            return Ok(new { message = "$class$ enregistré avec succès" });
        }
        catch(Exception e)
        {
            return StatusCode(500, $"Une erreur s'est produite: {e.Message}");
        }
    }

    // PUT: /$class$/id
    [HttpPut("{id}")]
    public IActionResult Put(string id, [FromBody] $class$ $classVariable$){
        NpgsqlConnection cnx = Connex.getConnection();
        cnx.Open();
        $classVariable$.Update(cnx, id);
        cnx.Close();

        return NoContent();
    }

    // DELETE: /$class$/id
    [HttpDelete("{id}")]
    public IActionResult Delete(string id){
        NpgsqlConnection cnx = Connex.getConnection();
        cnx.Open();
        _$classVariable$.Delete(cnx, id);
        cnx.Close();

        return NoContent();
    }

    $LoginFunction$
}